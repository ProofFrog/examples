import 'examples/HPKE/DH.primitive';
import 'examples/HPKE/KEM/DDH.game';
import 'examples/HPKE/KDF/KDF.primitive';
import 'examples/HPKE/KDF/Security.game';

Reduction R1() compose ... against ....Adversary {
    
}

proof:

let:
    // Diffie-Hellman key exchange
    Int g;
    Int p;
    Set G;
    Set Z_q;
    DH D = DH(g, p, G, Z_q);

    // KDF
    Int Nsecret; // length of shared secret generated by AuthDHKEM
    KDF F = KDF(Nsecret);

    DHAKEM KEM = DHAKEM(D, F, Nsecret);

assume:
    DDH(D);
    Security(F);

theorem:
    // AuthDHKEM is secure

games:
    

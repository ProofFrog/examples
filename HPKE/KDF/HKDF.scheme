import 'examples\HPKE\KDF\KDF.primitive';

// A HMAC-based Extract-and-Expand Key Derivation Function (HKDF) adapted for use in DHKEM.

Scheme HKDF(KDF K) extends KDF {

    // TODO: Is there a way to treat these two functions as black boxes? Or do I have to make an HKDF primitive?
    BitString<Nh> Extract(BitString ikm);
    BitString<out> Expand(BitString prk, ByteString<Ninfo>? info);

    BitString<out> evaluate(BitString<lambda> dh, BitString<in> context) {
        BitString<Nh> eae_prk = K.Extract(dh);
        BitString<out> shared_secret = K.Expand(eae_prk, "shared_secret", kem_context);
        return shared_secret;
    }
}

import 'examples/Primitives/PubKeyEnc.primitive';

Game Left(PubKeyEnc E) {
    E.PublicKey pk;
    E.SecretKey sk;
    Int count;

    E.PublicKey Initialize() {
        E.PublicKey * E.SecretKey k = E.KeyGen();
        pk = k[0];
        sk = k[1];
        count = 0;
        return pk;
    }

    E.Ciphertext? Challenge(E.Message mL, E.Message mR) {
        count = count + 1;
        if (count > 1) {
            return None;
        }
        return E.Enc(pk, mL);
    }
}

Game Right(PubKeyEnc E) {
    E.PublicKey pk;
    E.SecretKey sk;
    Int count;

    E.PublicKey Initialize() {
        E.PublicKey * E.SecretKey k = E.KeyGen();
        pk = k[0];
        sk = k[1];
        count = 0;
        return pk;
    }

    E.Ciphertext? Challenge(E.Message mL, E.Message mR) {
        count = count + 1;
        if (count > 1) {
            return None;
        }
        return E.Enc(pk, mR);
    }
}

export as OneTimeSecrecy;

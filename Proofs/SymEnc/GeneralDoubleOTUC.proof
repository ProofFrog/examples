import 'examples/Primitives/SymEnc.primitive';
import 'examples/Schemes/SymEnc/GeneralDoubleSymEnc.scheme';
import 'examples/Games/SymEnc/OneTimeUniformCiphertexts.game';

Reduction R1(DoubleSymEnc D) compose OneTimeUniformCiphertexts(D.T) against OneTimeUniformCiphertexts(D).Adversary {
	D.Ciphertext CTXT(D.Message m) {
		D.S.Key k1 = D.S.KeyGen();
		D.S.Ciphertext c1 = D.S.Enc(k1, m);
		D.T.Ciphertext c2 = challenger.CTXT(c1);
		return c2;
	}
}

proof:

let:
	Set MessageSpace;
	Set KeySpace1;
	Set KeySpace2;

	Set IntermediateSpace;
	Set CiphertextSpace;

	SymEnc S = SymEnc(MessageSpace, IntermediateSpace, KeySpace1);
	SymEnc T = SymEnc(IntermediateSpace, CiphertextSpace, KeySpace2);
	GeneralDoubleSymEnc D = GeneralDoubleSymEnc(S, T);

assume:
	OneTimeUniformCiphertexts(T);

theorem:
	OneTimeUniformCiphertexts(D);

games:
	OneTimeUniformCiphertexts(D).Real against OneTimeUniformCiphertexts(D).Adversary;

	// By codewise equivalency
	OneTimeUniformCiphertexts(T).Real compose R1(D) against OneTimeUniformCiphertexts(D).Adversary;

	// By assumption
	OneTimeUniformCiphertexts(T).Random compose R1(D) against OneTimeUniformCiphertexts(D).Adversary;

	// By codewise equivalency
	OneTimeUniformCiphertexts(D).Random against OneTimeUniformCiphertexts(D).Adversary;
